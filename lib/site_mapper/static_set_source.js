// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var cache$, config, each, extend, Source, StaticSetSource;
  Source = require('./source');
  config = require('../config');
  cache$ = require('underscore');
  each = cache$.each;
  extend = cache$.extend;
  module.exports = StaticSetSource = function (super$) {
    extends$(StaticSetSource, super$);
    function StaticSetSource(options) {
      Source.call(this, options);
    }
    StaticSetSource.prototype._generateUrls = function (cb) {
      var channel, updatedAt;
      channel = this.options.channel;
      updatedAt = new Date;
      each(this.options.urls, function (this$) {
        return function (href) {
          return cb({
            url: this$.urlFormatter(href),
            channel: channel,
            updatedAt: updatedAt,
            changefreq: this$.changefreq,
            priority: this$.priority
          });
        };
      }(this));
      return this.end();
    };
    return StaticSetSource;
  }(Source);
  function isOwn$(o, p) {
    return {}.hasOwnProperty.call(o, p);
  }
  function extends$(child, parent) {
    for (var key in parent)
      if (isOwn$(parent, key))
        child[key] = parent[key];
    function ctor() {
      this.constructor = child;
    }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor;
    child.__super__ = parent.prototype;
    return child;
  }
}.call(this);
