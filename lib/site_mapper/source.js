// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var config, EventEmitter, Source;
  EventEmitter = require('events').EventEmitter;
  config = require('../config');
  module.exports = Source = function (super$) {
    extends$(Source, super$);
    function Source(options) {
      this.options = options;
      this.changefreq = options.changefreq;
      this.priority = options.priority;
      this.urlFormatter = options.urlFormatter;
      this.out = options.out;
    }
    Source.prototype.generateUrls = function (cb) {
      return this._generateUrls(cb);
    };
    Source.prototype.end = function () {
      return process.nextTick(function (this$) {
        return function () {
          return this$.emit('done');
        };
      }(this));
    };
    Source.prototype.error = function (err) {
      return process.nextTick(function (this$) {
        return function () {
          return this$.emit('error', err);
        };
      }(this));
    };
    Source.prototype._generateUrls = function (cb) {
      throw 'Not Implemented Yet!';
    };
    return Source;
  }(EventEmitter);
  function isOwn$(o, p) {
    return {}.hasOwnProperty.call(o, p);
  }
  function extends$(child, parent) {
    for (var key in parent)
      if (isOwn$(parent, key))
        child[key] = parent[key];
    function ctor() {
      this.constructor = child;
    }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor;
    child.__super__ = parent.prototype;
    return child;
  }
}.call(this);
